<#@ import namespace="System.Collections.Generic" #>
<#@ include file="..\IntegrationTestTemplates\CheckerTemplates\MdmEntityCheckerTemplate.tt" #>
<#@ include file="..\IntegrationTestTemplates\CheckerTemplates\MdmEntityDetailsCheckerTemplate.tt" #>
<#@ include file="..\IntegrationTestTemplates\MdmEntityDataTemplate.tt" #>
<#@ include file="..\IntegrationTestTemplates\MdmEntityLocatorFactoryTestTemplates\NonCachedMdmEntityLocatorFactoryTestsTemplate.tt" #>
<#@ include file="..\IntegrationTestTemplates\MdmEntityLocatorFactoryTestTemplates\CachedMdmEntityLocatorFactoryTestsTemplate.tt" #>
<#@ include file="..\IntegrationTestTemplates\MdmServiceTestTemplates\MdmServiceEntityRetrievalTestsTemplate.tt" #>
<#@ include file="..\IntegrationTestTemplates\MdmServiceTestTemplates\MdmServiceEntityUpdateTestsTemplate.tt" #>
<#+
// <copyright file="IntegrationTestGenerator.tt" company="RWE">
//  Copyright © RWE. All Rights Reserved.
// </copyright>

public class IntegrationTestGenerator : Generator
{
    public List<Tuple<string, string, List<string>, string>> entities;
	public bool preserveFiles;

	protected override void RunCore()
	{
		var project = @"..\..\MDM.Client.IntegrationTests\MDM.Client.IntegrationTests.csproj";

        foreach(var e in entities)
		{
            var rootFolder = @"..\MDM.Client.IntegrationTests\" + e.Item1 + @"\";
			
            CreateTemplates(new MdmEntityCheckerTemplate() { EntityName = e.Item1 },
                true, @"..\MDM.Client.IntegrationTests\Checkers\" + e.Item1 + "Checker.cs", project);
			
			if (!string.IsNullOrEmpty(e.Item2)) {
				CreateTemplates(new MdmEntityDetailsCheckerTemplate() { EntityName = e.Item2, Properties = e.Item3 },
					true, @"..\MDM.Client.IntegrationTests\Checkers\" + e.Item2 + "Checker.cs", project);
			}
			
            CreateTemplates(new MdmEntityDataTemplate() { EntityName = e.Item1, PrerequisiteContent = e.Item4 },
                true, rootFolder + e.Item1 + "Data.cs", project);
			
            CreateTemplates(new NonCachedMdmEntityLocatorFactoryTestsTemplate() { EntityName = e.Item1 },
                true, rootFolder + @"MdmEntityLocatorFactory\" + "NonCachedMdmEntityLocatorFactoryTests.cs", project);
			
            CreateTemplates(new CachedMdmEntityLocatorFactoryTestsTemplate() { EntityName = e.Item1 },
                true, rootFolder + @"MdmEntityLocatorFactory\" + "CachedMdmEntityLocatorFactoryTests.cs", project);
			
            CreateTemplates(new MdmServiceEntityRetrievalTestsTemplate() { EntityName = e.Item1 },
                true, rootFolder + @"MdmService\" + "MdmServiceEntityRetrievalTests.cs", project);
			
            CreateTemplates(new MdmServiceEntityUpdateTestsTemplate() { EntityName = e.Item1 },
                true, rootFolder + @"MdmService\" + "MdmServiceEntityUpdateTests.cs", project);
		}
	}

    private void CreateTemplates(Template template, bool preserve, string file, string project)
	{
        template.Output.PreserveExistingFile = false;
		template.Output.File = file;
		template.Output.Project = project;
		template.Render();
	}
}
#>
