<#+
// <copyright file="MdmEntityDataTemplate.tt" company="RWE">
//  Copyright © RWE. All Rights Reserved.
// </copyright>

public class MdmEntityDataTemplate : CSharpTemplate
{
	public string EntityName { get; set;}

	public string PrerequisiteContent { get; set; }

	public override string TransformText()
	{
		base.TransformText();
#>
namespace MDM.Client.IntegrationTests.<#= EntityName #>
{
    using Microsoft.Practices.ServiceLocation;
    using Microsoft.VisualStudio.TestTools.UnitTesting;

    using RWEST.Nexus.MDM.Client.Services;
    using RWEST.Nexus.MDM.Contracts;

    public class <#= EntityName #>Data
    {
        public static <#= EntityName #> PostBasicEntity()
        {
            var mdmService = ServiceLocator.Current.GetInstance<IMdmEntityService<<#= EntityName #>>>();

            var entity = ObjectMother.Create<<#= EntityName #>>();
            var mappings = entity.Identifiers;
            entity.Identifiers = new NexusIdList();
            SetAdditionalData(entity);
            var response = mdmService.Create(entity);
            
            Assert.IsTrue(response.IsValid);

            var createdEntity = response.Message;

            foreach (var identifier in mappings)
            {
                var mappingResponse = mdmService.CreateMapping(createdEntity.ToNexusKey(), identifier);
                Assert.IsTrue(mappingResponse.IsValid);
                createdEntity.Identifiers.Add(identifier);
            }

            return createdEntity;
        }

        protected static void SetAdditionalData(<#= EntityName #> entity)
        {
			<#= PrerequisiteContent #>
        }
    }
}
<#+
        return this.GenerationEnvironment.ToString();
	}
}
#>
